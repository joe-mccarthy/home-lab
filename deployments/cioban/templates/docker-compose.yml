services:
  cioban:
    image: registry.gitlab.com/ix.ai/cioban:latest
    # The Docker image for the Cioban service, pulled from the GitLab container registry.
    # Replace `latest` with a specific version tag for better stability in production environments.

    deploy:
      mode: replicated
      # Deployment mode for the service. `replicated` ensures a specific number of replicas are running.
      replicas: 1
      # The number of replicas (instances) of the service to run. In this case, only one instance is deployed.
      placement:
        constraints:
          - node.role == manager
          # Placement constraint ensures that the service runs only on nodes with the `manager` role in the Swarm.

      labels:
        ai.ix.auto-update: 'true'
        # Custom label used by Cioban to identify services that should be automatically updated.
        traefik.enable: 'false'
        # Disables Traefik integration for this service. Set to `true` if Traefik should manage routing for this service.

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:rw'
      # Mounts the Docker socket to allow the service to interact with the Docker API.
      # This is required for Cioban to manage and update other services.
      # Use caution as this grants the container full access to the Docker daemon.
      - '~/.docker/config.json:/root/.docker/config.json:ro'
      # Mounts the Docker configuration file to provide access to private registries.
      # The file is mounted as read-only (`ro`) for security.

    environment:
      SLEEP_TIME: '1m'
      # The interval between checks for updates. In this case, the service checks every 1 minute.
      FILTER_SERVICES: 'label=ai.ix.auto-update'
      # Specifies a filter to identify which services should be updated.
      # In this case, only services with the label `ai.ix.auto-update` will be updated.
      LOGLEVEL: INFO
      # Sets the logging level for the service. Options include `DEBUG`, `INFO`, `WARNING`, `ERROR`, and `CRITICAL`.

# Notes:
# - Ensure that the Docker Swarm cluster is properly configured before deploying this stack.
# - The `volumes` section grants the container significant privileges. Use it only in trusted environments.
# - Replace `~/.docker/config.json` with the appropriate path to the Docker configuration file on the host.
# - The `SLEEP_TIME` and `FILTER_SERVICES` environment variables can be adjusted to customize the update behavior.
# - If Traefik is used for routing, set `traefik.enable` to `true` and configure additional labels for routing rules.
# - Always test changes in a staging environment before deploying to production.