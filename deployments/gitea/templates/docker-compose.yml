services:
  server:
    image: docker.gitea.com/gitea:1.23.5
    # The Docker image for the Gitea service, pulled from the Gitea Docker registry.
    # Replace `1.23.5` with a specific version tag to ensure stability and avoid unexpected updates.

    container_name: gitea
    # Sets the container name to `gitea` for easier identification and management.

    environment:
      - USER_UID=1000
      # Specifies the user ID under which the Gitea service will run. This improves security by avoiding root privileges.
      - USER_GID=1000
      # Specifies the group ID under which the Gitea service will run. Ensure this matches the NFS directory permissions.

    restart: always
    # Ensures the container automatically restarts if it stops unexpectedly.
    # This is useful for maintaining high availability of the Gitea service.

    networks:
      - proxy
      # Connects the Gitea service to the `proxy` network, which is managed externally.
      # This allows integration with Traefik for reverse proxy and routing.

    volumes:
      - /mnt/nfs/docker/gitea:/data
      # Mounts the NFS directory to the `/data` directory inside the container.
      # This is where Gitea stores its data, such as repositories, configuration, and logs.
      - /etc/timezone:/etc/timezone:ro
      # Mounts the host's timezone configuration as read-only to ensure the container uses the correct timezone.
      - /etc/localtime:/etc/localtime:ro
      # Mounts the host's local time configuration as read-only to synchronize the container's time with the host.

    deploy:
      mode: replicated
      # Deployment mode for the service. `replicated` ensures a specific number of replicas are running.
      replicas: 1
      # The number of replicas (instances) of the service to run. In this case, only one instance is deployed.

      labels:
        - "traefik.enable=true"
        # Enables Traefik integration for this service.
        - "traefik.http.routers.git.entrypoints=web"
        # Defines the entry point for HTTP traffic (port 80) for the `git` router.
        - "traefik.http.routers.git.rule=Host(`git.{{ general.domain }}`)"
        # Specifies the routing rule for HTTP traffic. Requests to `git.<domain>` are routed to this service.
        - "traefik.http.middlewares.git-https-redirect.redirectscheme.scheme=https"
        # Redirects HTTP traffic to HTTPS for secure communication.
        - "traefik.http.routers.git.middlewares=git-https-redirect"
        # Applies the HTTPS redirection middleware to the `git` router.
        - "traefik.http.routers.git-secure.entrypoints=websecure"
        # Defines the entry point for HTTPS traffic (port 443) for the `git-secure` router.
        - "traefik.http.routers.git-secure.rule=Host(`git.{{ general.domain }}`)"
        # Specifies the routing rule for HTTPS traffic. Requests to `git.<domain>` are routed to this service.
        - "traefik.http.routers.git-secure.tls=true"
        # Enables TLS (HTTPS) for the `git-secure` router.
        - "traefik.http.routers.git-secure.service=git"
        # Associates the `git-secure` router with the `git` service.
        - "traefik.http.routers.git-secure.tls.certresolver=letsencrypt"
        # Configures Traefik to use the Let's Encrypt certificate resolver for automatic SSL certificate management.
        - "traefik.http.services.git.loadbalancer.server.port=3000"
        # Specifies the internal port (3000) of the Gitea service to which Traefik should route traffic.
        - "traefik.http.services.git.loadbalancer.passhostheader=true"
        # Ensures that the original `Host` header is passed to the Gitea service.
        - "traefik.docker.network=proxy"
        # Specifies the Docker network (`proxy`) that Traefik should use to communicate with the service.

networks:
  proxy:
    external: true
    # Declares the `proxy` network as external, meaning it is managed outside this compose file.
    # Ensure the `proxy` network is already created and managed by Traefik or another service.