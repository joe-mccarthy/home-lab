services:
  homeassistant:
    container_name: homeassistant
    # Sets the container name to `homeassistant` for easier identification and management.

    image: "ghcr.io/home-assistant/home-assistant:stable"
    # Specifies the Docker image for Home Assistant, pulled from the GitHub Container Registry.
    # Replace `stable` with a specific version tag for better stability and to avoid unexpected updates.

    restart: unless-stopped
    # Ensures the container automatically restarts unless it is explicitly stopped.
    # This is useful for maintaining high availability of the Home Assistant service.

    privileged: true
    # Grants the container elevated privileges. This is required for certain hardware integrations (e.g., USB devices).
    # Use caution with this setting, as it increases the container's access to the host system.

    networks:
      proxy:
      # Connects the Home Assistant service to the `proxy` network, which is managed externally.
      # This allows integration with Traefik for reverse proxy and routing.
      default:
      # Connects the service to the default network for internal communication with other containers.

    volumes:
      - /mnt/nfs/docker/home_assistant:/config
      # Mounts the NFS directory to the `/config` directory inside the container.
      # This is where Home Assistant stores its configuration, logs, and data.
      - /etc/localtime:/etc/localtime:ro
      # Mounts the host's local time configuration as read-only to synchronize the container's time with the host.
      - /run/dbus:/run/dbus:ro
      # Mounts the host's D-Bus socket as read-only to enable integrations that require D-Bus (e.g., Bluetooth).

    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      # Passes the Zigbee or Z-Wave USB device from the host to the container.
      # Replace `/dev/ttyUSB0` with the appropriate device path for your hardware.

    deploy:
      mode: replicated
      # Deployment mode for the service. `replicated` ensures a specific number of replicas are running.

      replicas: 1
      # The number of replicas (instances) of the service to run. In this case, only one instance is deployed.

      labels:
        - "traefik.enable=true"
        # Enables Traefik integration for this service.
        - "traefik.http.routers.homeassistant.entrypoints=web"
        # Defines the entry point for HTTP traffic (port 80) for the `homeassistant` router.
        - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.{{ general.domain }}`)"
        # Specifies the routing rule for HTTP traffic. Requests to `homeassistant.<domain>` are routed to this service.
        - "traefik.http.middlewares.homeassistant-https-redirect.redirectscheme.scheme=https"
        # Redirects HTTP traffic to HTTPS for secure communication.
        - "traefik.http.routers.homeassistant.middlewares=homeassistant-https-redirect"
        # Applies the HTTPS redirection middleware to the `homeassistant` router.
        - "traefik.http.routers.homeassistant-secure.entrypoints=websecure"
        # Defines the entry point for HTTPS traffic (port 443) for the `homeassistant-secure` router.
        - "traefik.http.routers.homeassistant-secure.rule=Host(`homeassistant.{{ general.domain }}`)"
        # Specifies the routing rule for HTTPS traffic. Requests to `homeassistant.<domain>` are routed to this service.
        - "traefik.http.routers.homeassistant-secure.tls=true"
        # Enables TLS (HTTPS) for the `homeassistant-secure` router.
        - "traefik.http.routers.homeassistant-secure.service=homeassistant"
        # Associates the `homeassistant-secure` router with the `homeassistant` service.
        - "traefik.http.routers.homeassistant-secure.tls.certresolver=letsencrypt"
        # Configures Traefik to use the Let's Encrypt certificate resolver for automatic SSL certificate management.
        - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
        # Specifies the internal port (8123) of the Home Assistant service to which Traefik should route traffic.
        - "traefik.http.services.homeassistant.loadbalancer.passhostheader=true"
        # Ensures that the original `Host` header is passed to the Home Assistant service.
        - "traefik.docker.network=proxy"
        # Specifies the Docker network (`proxy`) that Traefik should use to communicate with the service.

networks:
  proxy:
    external: true
    # Declares the `proxy` network as external, meaning it is managed outside this compose file.
    # Ensure the `proxy` network is already created and managed by Traefik or another service.