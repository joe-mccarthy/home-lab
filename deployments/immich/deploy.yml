---
# Immich Photo Management Application Deployment Playbook
# This is the main entry point for deploying the Immich photo and video management application.
# Immich provides a self-hosted alternative to Google Photos with AI-powered features.

- name: Deploy Immich stack to Docker Swarm
  # Main playbook task that orchestrates the complete Immich deployment process.
  # This includes preparing the environment, setting up storage, and deploying all services.
  # The deployment creates a fully functional photo management system with web interface.
  
  hosts: manager[0]
  # Targets the first Docker Swarm manager node for deployment.
  # Using manager[0] ensures deployment happens on a node with swarm management capabilities.
  # The [0] index selects the first manager from the inventory group.
  # This approach provides consistency when multiple manager nodes are available.
  
  become: true
  # Enables privilege escalation to run tasks as root when necessary.
  # Required for creating directories, managing Docker services, and setting file permissions.
  # Many Docker and file system operations require elevated privileges.
  
  roles:
    - check_nfs
    # First role: Prepares the NFS storage infrastructure for Immich.
    # Creates all required directories with proper permissions and ownership.
    # Ensures persistent storage is ready before deploying application containers.
    # Tasks include:
    #   - Creating /mnt/nfs/docker/immich and subdirectories
    #   - Setting 0777 permissions for container access
    #   - Configuring nobody:nogroup ownership
    
    - deploy
    # Second role: Handles the actual application deployment to Docker Swarm.
    # Processes templates, manages existing services, and deploys the new stack.
    # Ensures clean deployment by removing old services before creating new ones.
    # Tasks include:
    #   - Installing prerequisites (docker-compose)
    #   - Stopping existing Immich services
    #   - Processing docker-compose.yaml template with variables
    #   - Deploying stack to Docker Swarm
    #   - Cleaning up temporary files

# Related Files:
# - group_vars/all.yml: Contains variable definitions and vault references
# - templates/docker-compose.yaml: Service definitions and configuration
# - roles/check_nfs/tasks/main.yml: NFS directory preparation tasks
# - roles/deploy/tasks/main.yml: Main deployment logic and service management


