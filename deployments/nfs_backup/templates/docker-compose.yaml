# =============================================================================
# RESTIC BACKUP SOLUTION
# =============================================================================
#
# This Docker Compose configuration implements a comprehensive backup strategy using Restic:
# 1. backup - Creates and manages automated backups of NFS shared storage
# 2. prune - Manages retention policies to optimize storage usage
# 3. check - Performs regular integrity verification of the backup repository

services:
  # =============================================================================
  # BACKUP SERVICE
  # =============================================================================
  # Core service responsible for creating encrypted backups of the NFS data
  backup:
    image: mazzolino/restic      # Restic backup tool containerized image
    container_name: restic       # Explicit container name for easier management
    hostname: nfs-backup         # Internal hostname identifier
    environment:
      # Startup configuration
      RUN_ON_STARTUP: "false"    # Prevents immediate backup on container start
      SKIP_INIT: "false"         # Initializes repository on first run if needed
      
      # Automated backup schedule (hourly at minute 0)
      BACKUP_CRON: "0 0/1 * * *" 
      
      # Repository configuration
      RESTIC_REPOSITORY: "{{ nfs_s3_bucket }}"      # S3 bucket URL from Ansible variable
      AWS_DEFAULT_REGION: "{{ nfs_s3_region }}"     # AWS region for S3 bucket
      AWS_ACCESS_KEY_ID: "{{ nfs_s3_key_id }}"      # S3 access credentials
      AWS_SECRET_ACCESS_KEY: "{{ nfs_s3_access_key }}"
      
      # Encryption password (from Ansible vault)
      RESTIC_PASSWORD: "{{ nfs_encryption_key }}"
      
      # Backup source configuration
      RESTIC_BACKUP_SOURCES: /exports/docker        # Directory to be backed up
      
      # Performance and optimization settings
      RESTIC_COMPRESSION: max                       # Maximum compression to save storage
      
      # Additional backup parameters
      # Tag for identifying this backup set
      # Detailed logging for monitoring
      RESTIC_BACKUP_ARGS: >-
        --tag nfs-backup                            
        --verbose                                   
      
      # Container environment settings
      TZ: Europe/London                             # Timezone for consistent logging
    
    # Volume mounts for data access
    volumes:
      - /restore:/restore                           # Mount point for restore operations
      - /exports/docker:/exports/docker:ro          # Source data (read-only for safety)
    
    # Security configuration
    security_opt:
      - no-new-privileges:true                      # Prevents privilege escalation attacks
    
    # Deployment configuration for Docker Swarm
    deploy:
      mode: replicated                              # Standard deployment mode
      replicas: 1                                   # Single instance is sufficient
      placement:
        constraints:
          - node.labels.storage == true             # Target nodes with storage capabilities
      labels:
        traefik.enable: 'false'                     # Disables external access via Traefik

  # =============================================================================
  # PRUNE SERVICE
  # =============================================================================
  # Maintenance service that applies retention policies and optimizes repository space
  prune:
    image: mazzolino/restic                         # Using same Restic image
    container_name: restic-prune                    # Unique container name
    hostname: nfs-backup                            # Consistent hostname across services
    environment:
      # Execution configuration
      RUN_ON_STARTUP: "false"                       # Only run on schedule, not at startup
      SKIP_INIT: "true"                             # Repository already initialized by backup service
      
      # Retention policy configuration 
      RESTIC_FORGET_ARGS: >- 
        --keep-last 24                              
        --keep-daily 7                              
        --keep-weekly 4                             
        --keep-monthly 4                            
        --verbose                                   
        --group-by host                             

      # Schedule pruning operations (daily at 3:30 AM)
      PRUNE_CRON: "30 3 * * *"
      
      # Repository access configuration (matching backup service)
      RESTIC_REPOSITORY: "{{ nfs_s3_bucket }}"
      RESTIC_PASSWORD: "{{ nfs_encryption_key }}"
      RESTIC_COMPRESSION: max                       # Consistent compression settings
      TZ: Europe/London                             # Timezone for scheduling
      AWS_DEFAULT_REGION: "{{ nfs_s3_region }}"
      AWS_ACCESS_KEY_ID: "{{ nfs_s3_key_id }}"
      AWS_SECRET_ACCESS_KEY: "{{ nfs_s3_access_key }}"
    
    # Security configuration
    security_opt:
      - no-new-privileges:true                      # Prevents privilege escalation attacks
        
    # Deployment configuration
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: 'false'                     # No external access needed

  # =============================================================================
  # CHECK SERVICE
  # =============================================================================
  # Verification service that ensures backup integrity and repository health
  check:
    image: mazzolino/restic
    container_name: restic-check
    hostname: nfs-backup
    environment:
      # Execution configuration
      SKIP_INIT: "true"                             # Repository initialized by backup service
      RUN_ON_STARTUP: "false"                       # Only run on schedule
      
      # Schedule repository checks (M/W/F at 8:30 AM)
      CHECK_CRON: "30 8 * * 1,3,5"
      
      # Check configuration parameters
      RESTIC_CHECK_ARGS: --read-data-subset=10%     # Sample 10% of data for efficiency
      
      # Repository access configuration
      RESTIC_REPOSITORY: "{{ nfs_s3_bucket }}"
      AWS_DEFAULT_REGION: "{{ nfs_s3_region }}"
      AWS_ACCESS_KEY_ID: "{{ nfs_s3_key_id }}"
      AWS_SECRET_ACCESS_KEY: "{{ nfs_s3_access_key }}"
      RESTIC_PASSWORD: "{{ nfs_encryption_key }}"
      TZ: Europe/London
    
    # Security configuration
    security_opt:
      - no-new-privileges:true
      
    # Deployment configuration
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: 'false'                     # No external access needed