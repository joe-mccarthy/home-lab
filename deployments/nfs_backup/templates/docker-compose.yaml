services:
  backup:
    image: mazzolino/restic
    container_name: restic
    hostname: nfs-backup
    environment:
      RUN_ON_STARTUP: "true" 
      BACKUP_CRON: "45 0/6 * * *"
      RESTIC_REPOSITORY: /restic
      RESTIC_PASSWORD: "{{ file_encryption_key }}"
      RESTIC_BACKUP_SOURCES: /mnt/volumes
      RESTIC_COMPRESSION: auto 
      RESTIC_BACKUP_ARGS: >-
        --tag nfs-backup
        --verbose
      TZ: Europe/London
    volumes:
      - /backups:/restic 
      - /backups/tmp-for-restore:/tmp-for-restore 
      - /exports/docker:/mnt/volumes:ro
    security_opt:
      - no-new-privileges:true
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.storage == true

  prune:
    image: mazzolino/restic
    container_name: restic-prune
    hostname: nfs-backup
    environment:
      RUN_ON_STARTUP: "false"
      SKIP_INIT: "true"
      RESTIC_FORGET_ARGS: >- 
        --keep-last 10
        --keep-daily 7
        --keep-weekly 5
        --keep-monthly 12
      PRUNE_CRON: "15 0/6 * * *"
      RESTIC_REPOSITORY: /restic
      RESTIC_PASSWORD: "{{ file_encryption_key }}"
      TZ: Europe/London
    security_opt:
      - no-new-privileges:true
    volumes:
      - /backups:/restic 
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.storage == true

  check:
    image: mazzolino/restic
    container_name: restic-check
    hostname: nfs-backup
    environment:
      SKIP_INIT: "true"
      RUN_ON_STARTUP: "false"
      CHECK_CRON: "15 1-23/6 * * *"
      RESTIC_CHECK_ARGS: --read-data-subset=10%
      RESTIC_REPOSITORY: /restic
      RESTIC_PASSWORD: "{{ file_encryption_key }}"
      TZ: Europe/London
    security_opt:
      - no-new-privileges:true
    volumes:
      - /backups:/restic 
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.storage == true