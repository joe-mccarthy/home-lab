---
# This playbook is responsible for deploying the Portainer stack to the Docker Swarm cluster.
# It performs the following tasks:
# 1. Prepares the Docker environment by ensuring Docker and docker-compose are installed and running.
# 2. Ensures that the required NFS directory for Portainer exists and is properly configured.
# 3. Deploys the Portainer stack using Docker Swarm by leveraging the `deploy` role.

- name: Deploy Portainer
  hosts: manager[0]  # Target the first manager node in the `manager` group.
  become: true  # Execute tasks with elevated privileges (sudo) to ensure proper permissions.
  roles:
    - docker  # Prepares the Docker environment, including Docker and docker-compose setup.
    - nfs  # Ensures the required NFS directory for Portainer exists with the correct permissions.
    - deploy  # Handles the deployment of the Portainer stack, including copying templates and running `docker stack deploy`.

# Notes:
# - Ensure that the `manager` group is properly defined in the Ansible inventory file, with at least one manager node.
# - The `docker` role should include tasks to install and configure Docker and docker-compose.
# - The `nfs` role should verify and create the necessary NFS directory for Portainer.
# - The `deploy` role should include tasks to copy the docker-compose template and deploy the stack using Docker Swarm.
# - This playbook assumes that the Docker Swarm cluster is already initialized and functional.
# - Always test the deployment in a staging environment before applying it to production.
# - Use `become: true` cautiously and ensure that the user running the playbook has the necessary sudo privileges.
# - Modular roles like `docker`, `nfs`, and `deploy` improve reusability and maintainability across similar deployments.
