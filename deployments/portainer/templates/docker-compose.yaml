services:
  agent:    
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      labels:
        - "traefik.enable=false"
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    command:
      - '--admin-password-file=/run/secrets/portainer_admin_password'
      - '--no-analytics'
      - '--tlsverify'
    secrets:
        - portainer_admin_password
    networks:
      agent_network:
      proxy:
    volumes:
      - /mnt/nfs/docker/portainer_data:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.entrypoints=web"
        - "traefik.http.routers.portainer.rule=Host(`portainer.{{ general.domain }}`)"
        - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
        - "traefik.http.routers.portainer-secure.entrypoints=websecure"
        - "traefik.http.routers.portainer-secure.rule=Host(`portainer.{{ general.domain }}`)"
        - "traefik.http.routers.portainer-secure.tls=true"
        - "traefik.http.routers.portainer-secure.service=portainer"
        - "traefik.http.routers.portainer-secure.tls.certresolver=letsencrypt"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.services.portainer.loadbalancer.passhostheader=true"
        - "traefik.docker.network=proxy"

networks:
  agent_network:
    driver: overlay
    attachable: true
  proxy:
    external: true

secrets:
  portainer_admin_password:
    external: true