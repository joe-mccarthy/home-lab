services:
  agent:
    image: portainer/agent:latest
    # Specifies the Docker image for the Portainer agent, pulled from Docker Hub.
    # The agent is responsible for managing communication between Portainer and the Docker Swarm nodes.

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mounts the Docker socket to allow the agent to interact with the Docker API.
      # This is required for managing containers and services on the host.
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      # Mounts the Docker volumes directory to allow the agent to manage volumes.

    networks:
      - agent_network
      # Connects the agent service to the `agent_network` for communication with the Portainer service.

    deploy:
      labels:
        - "traefik.enable=false"
        # Disables Traefik integration for the agent service, as it does not require external routing.

      mode: global
      # Ensures that one instance of the agent runs on every node in the Swarm cluster.

      placement:
        constraints: [node.platform.os == linux]
        # Ensures that the agent service is deployed only on nodes running Linux.

  portainer:
    container_name: portainer
    # Sets the container name to `portainer` for easier identification and management.

    image: portainer/portainer-ce:latest
    # Specifies the Docker image for Portainer Community Edition, pulled from Docker Hub.
    # Replace `latest` with a specific version tag for better stability and to avoid unexpected updates.

    command:
      - '--admin-password-file=/run/secrets/portainer_admin_password'
      # Specifies the path to the Docker secret containing the admin password.
      - '--no-analytics'
      # Disables analytics to prevent sending usage data to Portainer.
      - '--tlsverify'
      # Enables TLS verification for secure communication.

    secrets:
      - portainer_admin_password
      # Specifies the Docker secret to be used for the admin password.

    networks:
      agent_network:
      # Connects the Portainer service to the `agent_network` for communication with the agent service.
      proxy:
      # Connects the Portainer service to the `proxy` network for external access via Traefik.

    volumes:
      - /mnt/nfs/docker/portainer_data:/data
      # Mounts the NFS directory to the `/data` directory inside the container.
      # This is where Portainer stores its configuration, logs, and data.

    deploy:
      mode: replicated
      # Deployment mode for the service. `replicated` ensures a specific number of replicas are running.

      replicas: 1
      # The number of replicas (instances) of the service to run. In this case, only one instance is deployed.

      placement:
        constraints: [node.role == manager]
        # Ensures that the Portainer service is deployed only on manager nodes in the Swarm cluster.

      labels:
        - "traefik.enable=true"
        # Enables Traefik integration for this service.
        - "traefik.http.routers.portainer.entrypoints=web"
        # Defines the entry point for HTTP traffic (port 80) for the `portainer` router.
        - "traefik.http.routers.portainer.rule=Host(`portainer.{{ general.domain }}`)"
        # Specifies the routing rule for HTTP traffic. Requests to `portainer.<domain>` are routed to this service.
        - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
        # Redirects HTTP traffic to HTTPS for secure communication.
        - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
        # Applies the HTTPS redirection middleware to the `portainer` router.
        - "traefik.http.routers.portainer-secure.entrypoints=websecure"
        # Defines the entry point for HTTPS traffic (port 443) for the `portainer-secure` router.
        - "traefik.http.routers.portainer-secure.rule=Host(`portainer.{{ general.domain }}`)"
        # Specifies the routing rule for HTTPS traffic. Requests to `portainer.<domain>` are routed to this service.
        - "traefik.http.routers.portainer-secure.tls=true"
        # Enables TLS (HTTPS) for the `portainer-secure` router.
        - "traefik.http.routers.portainer-secure.service=portainer"
        # Associates the `portainer-secure` router with the `portainer` service.
        - "traefik.http.routers.portainer-secure.tls.certresolver=letsencrypt"
        # Configures Traefik to use the Let's Encrypt certificate resolver for automatic SSL certificate management.
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        # Specifies the internal port (9000) of the Portainer service to which Traefik should route traffic.
        - "traefik.http.services.portainer.loadbalancer.passhostheader=true"
        # Ensures that the original `Host` header is passed to the Portainer service.
        - "traefik.docker.network=proxy"
        # Specifies the Docker network (`proxy`) that Traefik should use to communicate with the service.

networks:
  agent_network:
    driver: overlay
    # Specifies the `overlay` driver for the `agent_network`, enabling communication across the Swarm cluster.
    attachable: true
    # Allows standalone containers to attach to this network.

  proxy:
    external: true
    # Declares the `proxy` network as external, meaning it is managed outside this compose file.
    # Ensure the `proxy` network is already created and managed by Traefik or another service.

secrets:
  portainer_admin_password:
    external: true
    # Declares the `portainer_admin_password` secret as external, meaning it is managed outside this compose file.
    # Ensure the secret is created and available in the Docker Swarm cluster before deploying this stack.