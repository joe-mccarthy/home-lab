# This task file is responsible for deploying the Traefik stack using Docker Swarm.
# It ensures that Docker and docker-compose are installed and running, removes any existing Traefik service,
# sets up the required directory structure, creates Docker secrets, deploys the stack, and cleans up temporary files.

- name: Ensure docker-compose is installed
  ansible.builtin.package:
    name: docker-compose  # The package name for docker-compose.
    state: present  # Ensure docker-compose is installed on the target system.
  # This task ensures that docker-compose is available for managing Docker-based applications.

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker  # The name of the Docker service.
    state: started  # Ensure the Docker service is running.
    enabled: true  # Ensure the Docker service starts on boot.
  # This task ensures that the Docker daemon is active and ready to manage containers.

- name: Setup traefik directory
  ansible.builtin.file:
    path: /home/docker-compose/traefik  # The path to the directory to be created.
    state: directory  # Ensure the path is a directory. If it does not exist, it will be created.
    mode: '0755'  # Set the directory permissions (read, write, execute for owner; read and execute for others).
  # This task creates the directory structure required for the Traefik deployment.

- name: Remove service
  docker_swarm_service:
    name: traefik_traefik  # The name of the Docker Swarm service to remove.
    state: absent  # Ensure the service is removed.
  ignore_errors: true  # Allow the playbook to continue even if this task fails.
  # This task removes any existing instance of the Traefik service to avoid conflicts during deployment.

- name: Iterate over secrets defined in group variables
  docker_secret:
    name: "{{ item.key }}"  # The name of the Docker secret, derived from the key in the `secrets` dictionary.
    data: "{{ item.value }}"  # The value of the Docker secret, derived from the value in the `secrets` dictionary.
    force: true  # Overwrite the secret if it already exists.
  with_dict: "{{ secrets }}"  # Iterate over the `secrets` dictionary defined in the group variables file.
  no_log: true  # Prevent sensitive data from being logged to ensure security.
  # This task creates Docker secrets from the `secrets` dictionary defined in the group variables file.
  # Docker secrets provide a secure way to manage sensitive data in containerized environments.

- name: Copy compose from template to host
  ansible.builtin.template:
    src: "templates/docker-compose.yaml"  # Path to the Jinja2 template for the docker-compose file.
    dest: "/home/docker-compose/traefik/docker-compose.yaml"  # Destination path for the docker-compose file.
    mode: '0755'  # Set the file permissions (read, write, execute for owner; read and execute for others).
  # This task copies the docker-compose template to the target system, ensuring it is ready for deployment.

- name: Deploy Traefik stack
  ansible.builtin.command:
    cmd: docker stack deploy -c /home/docker-compose/traefik/docker-compose.yaml traefik
    # The `docker stack deploy` command deploys the stack using the specified compose file.
    # - `-c`: Specifies the path to the docker-compose file.
    # - `traefik`: The name of the stack to deploy.
  register: swarm_check  # Store the output of the command in the `swarm_check` variable for debugging or logging purposes.
  changed_when: false  # Prevent this task from marking the playbook as "changed" to avoid unnecessary notifications.
  # This task deploys the Traefik stack to the Docker Swarm cluster.

- name: Delete compose directory
  ansible.builtin.command:
    cmd: rm -rf /home/docker-compose  # Remove the temporary directory and its contents.
  # This task cleans up the temporary files and directories created during the deployment process.

# Notes:
# - Ensure that Docker and Docker Swarm are properly configured on the target system before running this playbook.
# - The `docker-compose.yaml` template should define the services, networks, and volumes required for the Traefik stack.
# - The cleanup step (`Delete compose directory`) is optional and can be removed if the compose files need to be retained for debugging or future use.
# - Use caution when setting permissions (`0755`) and ensure that sensitive data is securely managed using Docker secrets.
# - Always test the deployment in a staging environment before applying it to production.