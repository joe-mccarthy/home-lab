---
# This task file is responsible for cleaning up unused Docker resources on a node.
# It removes all stopped containers, unused images, unused volumes, and unused networks.
# This is useful for freeing up disk space and maintaining a clean Docker environment.

- name: delete all docker containers
  ansible.builtin.shell: docker container prune --force
  # The `docker container prune` command removes all stopped containers.
  # The `--force` flag skips the confirmation prompt, ensuring the command runs non-interactively.
  ignore_errors: yes
  # The `ignore_errors` directive ensures that the playbook continues even if this task fails.
  # This is useful in case there are no stopped containers to prune.

- name: delete all docker images
  ansible.builtin.shell: docker image prune -a -f
  # The `docker image prune -a` command removes all unused images, including dangling and unreferenced images.
  # The `-f` flag forces the operation without a confirmation prompt.
  ignore_errors: yes
  # The `ignore_errors` directive ensures that the playbook continues even if this task fails.
  # This is useful in case there are no unused images to prune.

- name: delete all docker volumes
  ansible.builtin.shell: docker volume prune -f
  # The `docker volume prune` command removes all unused volumes.
  # The `-f` flag forces the operation without a confirmation prompt.
  ignore_errors: yes
  # The `ignore_errors` directive ensures that the playbook continues even if this task fails.
  # This is useful in case there are no unused volumes to prune.

- name: delete all docker networks
  ansible.builtin.shell: docker network prune -f
  # The `docker network prune` command removes all unused networks.
  # The `-f` flag forces the operation without a confirmation prompt.
  ignore_errors: yes
  # The `ignore_errors` directive ensures that the playbook continues even if this task fails.
  # This is useful in case there are no unused networks to prune.

# Notes:
# - This task file is intended for maintenance and cleanup purposes.
# - Be cautious when running this playbook, as it will permanently delete unused Docker resources.
# - Ensure that no critical containers, images, volumes, or networks are unintentionally removed.
# - This playbook assumes that Docker is installed and running on the target node.
# - If you want to limit the cleanup to specific resources, modify the commands accordingly.
