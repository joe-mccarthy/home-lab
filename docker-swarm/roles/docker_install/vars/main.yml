---
# This variables file defines key configuration options for installing and configuring Docker.
# These variables are used throughout the Docker installation and configuration tasks to ensure
# consistency and flexibility.

docker_apt_release_channel: "stable"
# The release channel for Docker packages.
# Options include:
# - "stable": The stable release channel, recommended for production environments.
# - "test": The testing release channel, for pre-release versions.
# - "nightly": The nightly release channel, for the latest development builds.
# Default: "stable".

docker_apt_repository: "deb [arch={{ deb_architecture.stdout }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
# The APT repository URL for Docker packages.
# - `arch={{ deb_architecture.stdout }}`: Dynamically sets the architecture (e.g., amd64, arm64) based on the system.
# - `{{ ansible_distribution_release }}`: Dynamically sets the Ubuntu release (e.g., focal, jammy) based on the target system.
# - The `stable` at the end corresponds to the release channel defined in `docker_apt_release_channel`.
# This repository provides access to the Docker packages for the specified architecture and release.

docker_daemon_options:
  storage-driver: "overlay2"
# Configuration options for the Docker daemon.
# - `storage-driver`: Specifies the storage driver to use for managing container layers.
#   - "overlay2": Recommended for most modern Linux distributions due to its performance and reliability.
#   - Other options include "aufs", "devicemapper", and "btrfs", but these are less commonly used.
# Additional daemon options can be added here as needed, such as logging drivers or custom network configurations.

# Notes:
# - Ensure that the `deb_architecture` variable is defined and populated by a task that retrieves the system architecture.
# - The `ansible_distribution_release` variable is automatically provided by Ansible and corresponds to the Ubuntu release name.
# - The `docker_daemon_options` dictionary can be extended to include additional configuration options for the Docker daemon.
# - These variables are designed to be flexible and reusable across different environments and playbooks.
