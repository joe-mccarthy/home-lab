---

# This task file is responsible for removing worker nodes from a Docker Swarm cluster.
# It first retrieves the list of worker nodes, drains their availability, and prepares them for removal.

- name: Get Worker Nodes
  ansible.builtin.shell: docker node ls -f 'role=worker' -q
  # The `docker node ls` command lists all nodes in the Swarm.
  # - `-f 'role=worker'`: Filters the output to include only worker nodes.
  # - `-q`: Outputs only the node IDs, making it easier to process the results.
  register: worker_nodes  # Store the output of the command in the `worker_nodes` variable.
  # This task retrieves the list of worker nodes in the Swarm cluster.

- name: Remove worker nodes
  ansible.builtin.shell: docker node update --availability drain {{ item }}
  # The `docker node update --availability drain` command marks a node as unavailable for task scheduling.
  # - `{{ item }}`: Refers to each worker node ID retrieved in the previous task.
  with_items: "{{ worker_nodes.stdout_lines | list }}"
  # The `with_items` loop iterates over the list of worker node IDs.
  ignore_errors: yes
  # The `ignore_errors` directive ensures that the playbook continues even if this task fails for some nodes.
  changed_when: false
  # The `changed_when` directive ensures that this task does not mark the playbook as "changed."
  register: remove_worker
  # The `register` directive stores the output of the command in the `remove_worker` variable.
  when: worker_nodes.stdout != "0"
  # The `when` clause ensures that this task runs only if there are worker nodes to process.
  # If no worker nodes are found, the task is skipped.

# Notes:
# - This playbook assumes that Docker is installed and running on the target node.
# - Draining a node ensures that no new tasks are scheduled on it, and existing tasks are gracefully stopped or rescheduled.
# - The `ignore_errors` directive is useful for handling cases where a node might already be drained or unavailable.
# - Ensure that the Swarm cluster is properly configured and accessible from the node running this playbook.
# - This task does not remove the nodes from the Swarm; it only drains their availability.
#   Additional steps may be required to completely remove the nodes from the cluster.
