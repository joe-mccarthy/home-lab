---
# This playbook is responsible for performing system updates on all hosts in the inventory.
# It ensures that the system packages are updated and upgraded, and reboots the system if required.

- hosts: all  # Target all hosts in the inventory for this playbook.
  become: true  # Run all tasks with elevated privileges (e.g., sudo).
  tasks:  # Define the list of tasks to execute.

  # Task 1: Update and upgrade Ubuntu packages
  - name: Update Ubuntu
    when: ansible_facts['os_family'] == 'Debian'  # Ensure this task only runs on Debian-based systems (e.g., Ubuntu).
    ansible.builtin.apt:
      upgrade: dist  # Perform a full distribution upgrade to ensure all packages are updated.
      update_cache: true  # Refresh the package cache before upgrading.
    # This task ensures that all packages on Debian-based systems are updated to their latest versions.

  # Task 2: Check if a reboot is required on Ubuntu
  - name: Check if a reboot is required on Ubuntu
    when: ansible_facts['os_family'] == 'Debian'  # Ensure this task only runs on Debian-based systems.
    ansible.builtin.stat:
      path: /var/run/reboot-required  # Check for the existence of the reboot-required file.
    register: ubuntu_reboot_required  # Save the result of the check in a variable for later use.
    # This task checks if the system requires a reboot after updates. The presence of the file
    # `/var/run/reboot-required` indicates that a reboot is necessary.

  # Task 3: Reboot the system if required
  - name: Reboot Ubuntu if required
    when: ubuntu_reboot_required.stat.exists | default(false)  # Only reboot if the reboot-required file exists.
    ansible.builtin.reboot:
      reboot_timeout: 600  # Allow up to 600 seconds (10 minutes) for the system to reboot.
    # This task reboots the system if a reboot is required. It ensures that the system is fully updated
    # and any changes requiring a reboot are applied.
